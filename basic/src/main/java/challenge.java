import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;

public class challenge {

	public static void main(String[] args) {
//		정렬문제 
//
//		    2차원배열 정렬이며, 정렬기준은  일차원배열 하나하나가 정렬기준이다.
//		    아래 3가지 조건을 전부 충족해야한다.
//		    
//
//		    [1] 앞글자 하나의 기준으로 오름차순하면된다. 
//		    [
//		        [5,3]
//		        [2,9]
//		        [3,8]
//		    ]
//		    정렬후
//		    [
//		        [2,9]
//		        [3,8]
//		        [5,3]
//		    ]
//		    -------------------------------------
//		    [2] 앞글자가 같은경우 다음글자를 비교한다.
//		    [
//		        [5,3]
//		        [5,1]
//		        [2,8]
//		    ]
//		    정렬후
//		    [
//		        [2,8]
//		        [5,1]
//		        [5,3]
//		    ]
//		    -------------------------------------
//		    [3] 길이가 다른경우 (각글자를 비교후 짧은배열이 위로올라간다.)
//		    [
//		        [5,7,2]
//		        [5,7]
//		        [1,5,6,45,6]
//		    ]
//		    정렬후
//		    [
//		        [1,5,6,45,6]
//		        [5,7]
//		        [5,7,2]
//		    ]
//
//		"""
//
//		"""
//		[최종문제] 위 규칙을 가지고 아래 배열을 정렬하시오.
//
//		    [
//		        [6,5,4,5,5,8],
//		        [6,5,6],
//		        [6,5,4,5,5],
//		        [3,4,5,8,9,3,3,3]
//		        [9],
//		        [1,4,7]
//		    ]
//		    정렬후
//		    [
//		        [1,4,7]
//		        [3,4,5,8,9,3,3,3]
//		        [6,5,4,5,5],
//		        [6,5,4,5,5,8],
//		        [6,5,6],
//		        [9],
//		    ]

		int[][] arr = { { 6, 5, 4, 5, 5, 8 }, { 6, 5, 6 }, { 6, 5, 4, 5, 5 }, { 3, 4, 5, 8, 9, 3, 3, 3 }, { 9 },
				{ 1, 4, 7 } };

		Arrays.sort(arr, new Comparator<int[]>() {
			@Override
			public int compare(int[] o1, int[] o2) {
				int length = o1.length > o2.length ? o2.length : o1.length;
				int idx = 0;
				int val=0;
				for(int i=0;i<length;i++) {
					val= o1[idx] - o2[idx];
				}
				return val;
			}

		});

		for (int[] a : arr) {
			System.out.println(Arrays.toString(a));
		}
	}
}